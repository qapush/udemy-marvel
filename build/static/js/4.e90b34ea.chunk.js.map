{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/pages/MainPage.js"],"names":["ErrorMessage","style","display","width","height","objectFit","margin","src","img","alt","useMarvelService","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","message","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","id","getAllComics","_transformComics","getComics","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","title","pageCount","language","textObjects","price","prices","View","imgStyle","className","href","RandomChar","setChar","useEffect","updateChar","onCharLoaded","Math","floor","random","then","errorMessage","spinner","Spinner","content","onClick","mjolnir","CharList","props","charList","setCharList","newItemLoading","setNewItemLoading","setOffset","charEnded","setCharEnded","onRequest","initial","onCharListLoaded","newCharList","ended","length","charlist","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","arr","i","tabIndex","ref","el","onCharSelected","onKeyPress","e","key","renderItems","disabled","Skeleton","CharInfo","charId","skeleton","ErrorBoundary","state","errorInfo","console","log","this","setState","children","Component","MainPage","selectedChar","decoration"],"mappings":"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","file":"static/js/4.e90b34ea.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\n\nconst ErrorMessage = () => {\n    return (\n        <img style={{ display: 'block', width: \"250px\", height: \"250px\",objectFit: 'contain', margin: \"0 auto\"}}  src={img} alt=\"Error\"/>\n    )\n}\n\nexport default ErrorMessage;","\nimport {useHttp} from '../hooks/http.hook';\n\nconst useMarvelService = () => {\n    const {loading, request, error, clearError} = useHttp();\n\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n\n    const _apiKey = 'apikey=23506b4f2d53fb3e5a04bf541459ebd7';\n    const _baseOffset = 210;\n\n    const getAllCharacters = async (offset = _baseOffset) => {\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\n        return res.data.results.map(_transformCharacter);\n    }\n\n    const getCharacter = async (id) => {\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n        return _transformCharacter(res.data.results[0]);\n    }\n\n    const getAllComics = async (offset = 0) => {\n        const res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`);\n        return res.data.results.map(_transformComics);\n    }\n\n    const getComics = async (id) => {\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n        return _transformComics(res.data.results[0]);\n    }\n\n    const _transformCharacter = (char) => {\n        return {\n            id: char.id,\n            name: char.name,\n            description: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n            homepage: char.urls[0].url,\n            wiki: char.urls[1].url,\n            comics: char.comics.items\n        }\n    }\n\n    const _transformComics = (comics) => {\n        return {\n            id: comics.id,\n            title: comics.title,\n            description: comics.description || 'There is no description',\n            pageCount: comics.pageCount ? `${comics.pageCount} p.` : 'No information about the number of pages',\n            thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\n            language: comics.textObjects.language || 'en-us',\n            price: comics.prices.price ? `${comics.prices.price}$` : 'not available'\n        }\n    }\n\n    return {loading, error, clearError, getAllCharacters, getCharacter, getAllComics, getComics}\n}\n\nexport default useMarvelService;","import { useState, useCallback } from \"react\";\n\nexport const useHttp = () => {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    const request = useCallback( async (url, method = 'GET', body = null, headers = {'Content-Type':'application/json'}) => {\n        \n        setLoading(true);\n\n        try {\n            const response = await fetch(url, { method, body, headers });\n\n            if (!response.ok) {\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n            }\n            const data = await response.json();\n\n            setLoading(false);\n            return data;\n\n        } catch(e) {\n            setLoading(false);\n            setError(e.message);\n            throw e;\n        }\n\n    }, [])\n    \n    const clearError = useCallback(() => setError(null), []);\n\n    return {loading, request, error, clearError}\n}","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useState, useEffect } from \"react\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport useMarvelService from \"../../services/MarvelService\";\nimport \"./randomChar.scss\";\nimport mjolnir from \"../../resources/img/mjolnir.png\";\n\nfunction RandomChar() {\n  const [char, setChar] = useState({});\n\n  const {loading, error, getCharacter, clearError } = useMarvelService();\n\n  useEffect(() => {\n    updateChar();\n    // const timerId = setInterval(updateChar, 10000);\n    return () => {\n      //   clearInterval(timerId);\n    };\n  }, []);\n\n  const onCharLoaded = (char) => {\n    setChar(char);\n  };\n\n  const updateChar = () => {\n    clearError();\n    const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n    getCharacter(id).then(onCharLoaded)\n  };\n\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const spinner = loading ? <Spinner /> : null;\n  const content = !(loading || error || !char) ? <View char={char} /> : null;\n\n  return (\n    <div className=\"randomchar\">\n      {errorMessage}\n      {spinner}\n      {content}\n      <div className=\"randomchar__static\">\n        <p className=\"randomchar__title\">\n          Random character for today!\n          <br />\n          Do you want to get to know him better?\n        </p>\n        <p className=\"randomchar__title\">Or choose another one</p>\n        <button onClick={() => updateChar()} className=\"button button__main\">\n          <div className=\"inner\">try it</div>\n        </button>\n        <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\n      </div>\n    </div>\n  );\n}\n\nconst View = ({ char }) => {\n  const { name, description, thumbnail, homepage, wiki } = char;\n  let imgStyle = { objectFit: \"cover\" };\n  if (\n    thumbnail ===\n    \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\n  ) {\n    imgStyle = { objectFit: \"contain\" };\n  }\n\n  return (\n    <div className=\"randomchar__block\">\n      <img\n        src={thumbnail}\n        alt=\"Random character\"\n        className=\"randomchar__img\"\n        style={imgStyle}\n      />\n      <div className=\"randomchar__info\">\n        <p className=\"randomchar__name\">{name}</p>\n        <p className=\"randomchar__descr\">{description}</p>\n        <div className=\"randomchar__btns\">\n          <a href={homepage} className=\"button button__main\">\n            <div className=\"inner\">homepage</div>\n          </a>\n          <a href={wiki} className=\"button button__secondary\">\n            <div className=\"inner\">Wiki</div>\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RandomChar;\n","import { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\nimport './charList.scss';\n\nconst CharList = (props) => {\n\n    const [charList, setCharList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(210);\n    const [charEnded, setCharEnded] = useState(false);\n\n    const { loading, error, getAllCharacters } = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, [])\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllCharacters(offset)\n            .then(onCharListLoaded)\n    }\n\n    const onCharListLoaded = (newCharList) => {\n\n        let ended = false;\n        if (newCharList.length < 9) {\n            ended = true;\n        }\n\n        setCharList(charlist => [...charList, ...newCharList]);\n        setNewItemLoading(false);\n        setOffset(offset => offset += 9);\n        setCharEnded(charEnded => ended);\n    }\n\n    const itemRefs = useRef([]);\n\n\n    const focusOnItem = (id) => {\n        // Я реализовал вариант чуть сложнее, и с классом и с фокусом\n        // Но в теории можно оставить только фокус, и его в стилях использовать вместо класса\n        // На самом деле, решение с css-классом можно сделать, вынеся персонажа\n        // в отдельный компонент. Но кода будет больше, появится новое состояние\n        // и не факт, что мы выиграем по оптимизации за счет бОльшего кол-ва элементов\n\n        // По возможности, не злоупотребляйте рефами, только в крайних случаях\n        itemRefs.current.forEach(item => item.classList.remove('char__item_selected'));\n        itemRefs.current[id].classList.add('char__item_selected');\n        itemRefs.current[id].focus();\n    }\n\n    // Этот метод создан для оптимизации, \n    // чтобы не помещать такую конструкцию в метод render\n    function renderItems(arr) {\n        const items =  arr.map((item, i) => {\n            let imgStyle = {'objectFit' : 'cover'};\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n\n        \n            return (\n                <li \n                    className=\"char__item\"\n                    tabIndex={0}\n                    ref={el => itemRefs.current[i] = el}  \n                    key={item.id}\n                    onClick={() => {\n                        props.onCharSelected(item.id);\n                        focusOnItem(i);\n                    }}\n                    onKeyPress={(e) => {\n                        if (e.key === ' ' || e.key === \"Enter\") {\n                            props.onCharSelected(item.id);\n                            focusOnItem(i);\n                        }\n                    }}>\n                        <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                        <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        });\n        // А эта конструкция вынесена для центровки спиннера/ошибки\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    const items = renderItems(charList);\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\n\n    return (\n        <div className=\"char__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button \n                className=\"button button__main button__long\"\n                disabled={newItemLoading}\n                style={{'display': charEnded ? 'none' : 'block'}}\n                onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n\n}\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func.isRequired\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport useMarvelService from \"../../services/MarvelService\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport Skeleton from \"../skeleton/Skeleton\";\n\nimport \"./charInfo.scss\";\n\nfunction CharInfo(props) {\n  const [char, setChar] = useState(null);\n\n  const { loading, error, getCharacter, clearError } =  useMarvelService();\n\n  useEffect(() => {\n    updateChar();\n  }, [props.charId]);\n\n  const updateChar = () => {\n    const { charId } = props;\n    if (!charId) {\n      return;\n    }\n    clearError();\n    getCharacter(charId).then(onCharLoaded);\n  };\n\n  const onCharLoaded = (char) => {\n    setChar(char);\n  };\n\n\n\n  const skeleton = char || loading || error ? null : <Skeleton />;\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const spinner = loading ? <Spinner /> : null;\n  const content = !(loading || error || !char) ? <View char={char} /> : null;\n\n  return (\n    <div className=\"char__info\">\n      {skeleton}\n      {errorMessage}\n      {spinner}\n      {content}\n    </div>\n  );\n}\n\nconst View = ({ char }) => {\n  const { name, description, thumbnail, homepage, wiki, comics } = char;\n\n  let imgStyle = { objectFit: \"cover\" };\n  if (\n    thumbnail ===\n    \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\n  ) {\n    imgStyle = { objectFit: \"contain\" };\n  }\n\n  return (\n    <>\n      <div className=\"char__basics\">\n        <img src={thumbnail} alt={name} style={imgStyle} />\n        <div>\n          <div className=\"char__info-name\">{name}</div>\n          <div className=\"char__btns\">\n            <a href={homepage} className=\"button button__main\">\n              <div className=\"inner\">homepage</div>\n            </a>\n            <a href={wiki} className=\"button button__secondary\">\n              <div className=\"inner\">Wiki</div>\n            </a>\n          </div>\n        </div>\n      </div>\n      <div className=\"char__descr\">{description}</div>\n      <div className=\"char__comics\">Comics:</div>\n      <ul className=\"char__comics-list\">\n        {comics.length > 0 ? null : \"There is no comics with this character\"}\n        {comics.map((item, i) => {\n          // eslint-disable-next-line\n          if (i > 9) return;\n          return (\n            <li key={i} className=\"char__comics-item\">\n              {item.name}\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nCharInfo.propTypes = {\n  charId: PropTypes.number,\n};\n\nexport default CharInfo;\n","import { Component } from \"react\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\n\nclass ErrorBoundary extends Component {\n    state = {\n        error: false\n    }\n\n    componentDidCatch(error, errorInfo) {\n        console.log(error, errorInfo);\n        this.setState({\n            error: true\n        })\n    }\n\n    render() {\n        if (this.state.error) {\n            return <ErrorMessage/>\n        }\n\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from \"react\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\nimport decoration from \"../../resources/img/vision.png\";\n\nconst MainPage = () => {\n\n\nconst[selectedChar, setChar] = useState(null);\n\nconst onCharSelected = (id) => {\n    setChar(id);\n}\n\n  return (\n    <>\n      <ErrorBoundary>\n        <RandomChar />\n      </ErrorBoundary>\n      <div className=\"char__content\">\n        <ErrorBoundary>\n          <CharList onCharSelected={onCharSelected} />\n        </ErrorBoundary>\n        <ErrorBoundary>\n          <CharInfo charId={selectedChar} />\n        </ErrorBoundary>\n      </div>\n      <img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\n    </>\n  );\n};\n\nexport default MainPage;"],"sourceRoot":""}